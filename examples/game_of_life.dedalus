% classic glider:
%                  Y
%
% -  -  -  -  -    2
% -  -  #  -  -    1
% -  -  -  #  -    0
% -  #  #  #  -   -1 
% -  -  -  -  -   -2
%
% X -1  0  1  2
% cell(X, Y)@T
alive(-1, -1)@0;
alive(0, -1)@0;
alive(1, -1)@0;
alive(1, 0)@0;
alive(0, 1)@0;

% some values to denote locations that can be sent to and received from.
% we assumer that there would be someone at address 'visualizer1'
% to receive information and display it
location(visualizer, visualizer1)@0;
location(Role, Value)@next <- location(Role, Value); % persist locations values



alive_adjacent(X1, Y1, X2, Y2, top) <-
  alive(X1, Y1), X2 = X1, successor(Y1, Y2);
alive_adjacent(X1, Y1, X2, Y2, top_right) <-
  alive(X1, Y1), successor(X1, X2), successor(Y1, Y2);
alive_adjacent(X1, Y1, X2, Y2, right) <-
  alive(X1, Y1), successor(X1, X2), Y2 = Y1;
alive_adjacent(X1, Y1, X2, Y2, bottom_right) <-
  alive(X1, Y1), successor(X1, X2), successor(Y2, Y1);
alive_adjacent(X1, Y1, X2, Y2, bottom) <-
  alive(X1, Y1), X2 = X1, successor(Y2, Y1);
alive_adjacent(X1, Y1, X2, Y2, bottom_left) <-
  alive(X1, Y1), successor(X2, X1), successor(Y2, Y1);
alive_adjacent(X1, Y1, X2, Y2, left) <-
  alive(X1, Y1), successor(X2, X1), Y2 = Y1;
alive_adjacent(X1, Y1, X2, Y2, top_left) <-
  alive(X1, Y1), successor(X2, X1), successor(Y1, Y2);


% We consider only dead cells around alive cells
% since only they can become populated.
%
% Also because there is infinite number of empty cells,
% and we can't work with infinite number of facts
dead(X1, Y1) <-
  not alive(X, Y),
  alive_adjacent(_X1, _Y1, X, Y, _Direction);

% cell stays alive only if has exactly 2 or 3 neighbours
% everything else is underpopulated or overpopulated
alive(X, Y)@next <- count_neighbours_around(alive, X, Y, 2);
alive(X, Y)@next <- count_neighbours_around(alive, X, Y, 3);
% if empty cell has exactly three neighbours -- becomes alive
alive(X, Y)@next <- count_neighbours_around(dead, X, Y, 3);

count_neighbours_around(alive, X, Y, count<Direction>) <-
  alive_adjacent(X, Y, X1, Y1, Direction),
  alive(X1, Y1);
count_neighbours_around(dead, X, Y, count<Direction>) <-
  alive_adjacent(X1, Y1, X, Y, Direction),
  alive(X1, Y1);



% output for someone outside who can draw
pixel(#Receiver, X, Y, T)@async <-
  location(visualizer, Receiver),
  alive(X, Y)@T;
