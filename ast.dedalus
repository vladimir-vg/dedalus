% format of the facts that will describe Dedalus source
% that later will be used to correctness check, type inference
% and transformation.
%
% It is not really AST, right? Let's call it Abstract Syntax Tables :)



fact(Filename, Line, Name, FactN, Timestamp)
fact_int_arg(FactN, N, Value)
fact_sym_arg(FactN, N, Value)
fact_str_arg(FactN, N, Value)

% ClauseN -- number of clause in the file
% Suffix -- next, async or none
clause(Filename, Line, Name, ClauseN, Suffix)
% ArgN -- position in the head
% AggFunc -- min, max, count or none
% LocationPrefix -- true/false. #Location
% head arg is identified uniquely by ClauseN-RuleN pair
clause_var_arg(ClauseN, ArgN, VarName, AggFunc, LocationPrefix)
clause_int_arg(ClauseN, ArgN, Value)
clause_str_arg(ClauseN, ArgN, Value)
clause_sym_arg(ClauseN, ArgN, Value)

% Negated -- true/false
% RuleN -- position in the body, number of the rule
% body rule is identified uniquely by ClauseN-RuleN pair
body_rule(Filename, Line, ClauseN, RuleN)

% Op == '<', '>', '>=', ...
% expected to have two arg facts with ArgN=1 and ArgN=2
body_binop(ClauseN, RuleN, Op)

body_fact(ClauseN, RuleN, Name, Negated)
% if body rule has explicit time variable
body_fact_var_time(ClauseN, RuleN, VarName)
% if it is a constant
body_fact_int_time(ClauseN, RuleN, Value)

body_choose(ClauseN, RuleN)
body_choose_key_var(ClauseN, RuleN, ArgN, VarName)
body_choose_row_var(ClauseN, RuleN, ArgN, VarName)

% information about arg used in body rule
% LocationPrefix = true/false
body_var_arg(ClauseN, RuleN, ArgN, VarName, LocationPrefix)
body_int_arg(ClauseN, RuleN, ArgN, Value)
body_sym_arg(ClauseN, RuleN, ArgN, Value)
body_str_arg(ClauseN, RuleN, ArgN, Value)
