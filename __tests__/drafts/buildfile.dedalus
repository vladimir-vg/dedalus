% we need to describe how to compose several dedalus files into one application
% some of the dedalus files might be shared.
% I would prefer to avoid adding explicit 'include' directives in dedalus code.
% It doesn't have to manage that.
%
% What is we just keep a table of files that must be compiled together?

application(app1, "util/file1.dedalus")@1;
application(app1, "app1/main1.dedalus")@1;

application(app2, "app2/file1.dedalus")@1;
application(app2, "app2/file2.dedalus")@1;

% we also can specify all files given by certain dependency:
application(app2, Filename) :- library(websockets, Filename);
application(app2, Filename) :- library(http, Filename);

% libraries may specify what files they provide depending on what
% other libraries have already shared.
% Probably authors of the libraries may just share
% what features they provide, what version they have
%
% And based on that expose certain files.
%
% Still, haven't realized how to compose several Dedalus programs.
% One big global @next tick might be not a good idea.
% Probably need a way to split things.
%
% Maybe make each app have its own location?
% so, basically we just start bunch of distinct Dedalus apps,
% just communication is easier, since they are on the same machine.